// Code generated by openapi-generator-go DO NOT EDIT.
//
// Source:
//
//	Title: Test
//	Version: 0.1.0
package generatortest

import (
	"encoding/json"

	validation "github.com/go-ozzo/ozzo-validation/v4"
)

// ListItem is an object.
type ListItem struct {
	// Next: the next item
	Next *ListItem `json:"next,omitempty" mapstructure:"next,omitempty"`
	// Value:
	Value string `json:"value,omitempty" mapstructure:"value,omitempty"`
}

// NewListItem instantiates a new ListItem with default values overriding them as follows:
// 1. Default values specified in the ListItem schema
// 2. Default values specified per ListItem property
func NewListItem() *ListItem {
	m := &ListItem{
		Next: NewListItem(),
	}

	return m
}

// UnmarshalJSON implements the json.Unmarshaler interface for ListItem. It set the default values for the ListItem type
func (m *ListItem) UnmarshalJSON(data []byte) error {
	// Set default values
	*m = *NewListItem()

	// Unmarshal using an alias to avoid an infinite loop
	type alias ListItem
	err := json.Unmarshal(data, (*alias)(m))
	if err != nil {
		return err
	}
	return nil
}

// Validate implements basic validation for this model
func (m ListItem) Validate() error {
	errors := validation.Errors{
		"next": validation.Validate(
			m.Next,
		),
	}
	return errors.Filter()
}

// GetNext returns the Next property
func (m ListItem) GetNext() *ListItem {
	return m.Next
}

// SetNext sets the Next property
func (m *ListItem) SetNext(val *ListItem) {
	m.Next = val
}

// GetValue returns the Value property
func (m ListItem) GetValue() string {
	return m.Value
}

// SetValue sets the Value property
func (m *ListItem) SetValue(val string) {
	m.Value = val
}
