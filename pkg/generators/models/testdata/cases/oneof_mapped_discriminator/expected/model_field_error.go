// Code generated by openapi-generator-go DO NOT EDIT.
//
// Source:
//
//	Title: Test oneOf discriminator support
//	Version: 0.1.0
package generatortest

import (
	"encoding/json"

	validation "github.com/go-ozzo/ozzo-validation/v4"
)

// FieldError is an object. Represents a validation error. The request must be corrected before retrying.
type FieldError struct {
	// Errors:
	Errors []ValidationError `json:"errors" mapstructure:"errors"`
	// Kind:
	Kind FieldErrorKind `json:"kind" mapstructure:"kind"`
	// TraceId: the request tracing id, this can be submitted during bug reports to help with debugging the underlying cause.
	TraceId string `json:"traceId" mapstructure:"traceId"`
}

// NewFieldError instantiates a new FieldError with default values overriding them as follows:
// 1. Default values specified in the FieldError schema
// 2. Default values specified per FieldError property
func NewFieldError() *FieldError {
	m := &FieldError{}

	return m
}

// UnmarshalJSON implements the json.Unmarshaler interface for FieldError. It set the default values for the FieldError type
func (m *FieldError) UnmarshalJSON(data []byte) error {
	// Set default values
	*m = *NewFieldError()

	// Unmarshal using an alias to avoid an infinite loop
	type alias FieldError
	err := json.Unmarshal(data, (*alias)(m))
	if err != nil {
		return err
	}
	return nil
}

// Validate implements basic validation for this model
func (m FieldError) Validate() error {
	errors := validation.Errors{
		"errors": validation.Validate(
			m.Errors, validation.NotNil,
		),
		"kind": validation.Validate(
			m.Kind, validation.Required,
		),
	}
	return errors.Filter()
}

// GetErrors returns the Errors property
func (m FieldError) GetErrors() []ValidationError {
	return m.Errors
}

// SetErrors sets the Errors property
func (m *FieldError) SetErrors(val []ValidationError) {
	m.Errors = val
}

// GetKind returns the Kind property
func (m FieldError) GetKind() FieldErrorKind {
	return m.Kind
}

// SetKind sets the Kind property
func (m *FieldError) SetKind(val FieldErrorKind) {
	m.Kind = val
}

// GetTraceId returns the TraceId property
func (m FieldError) GetTraceId() string {
	return m.TraceId
}

// SetTraceId sets the TraceId property
func (m *FieldError) SetTraceId(val string) {
	m.TraceId = val
}
