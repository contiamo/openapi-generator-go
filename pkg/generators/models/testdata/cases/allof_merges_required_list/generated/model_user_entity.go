// Code generated by openapi-generator-go DO NOT EDIT.
//
// Source:
//
//	Title: Test
//	Version: 0.1.0
package generatortest

import (
	"encoding/json"

	validation "github.com/go-ozzo/ozzo-validation/v4"
	"github.com/go-ozzo/ozzo-validation/v4/is"
)

// UserEntity is an object. This is a short description of a user entity used for permission listing or assignments in other services.
type UserEntity struct {
	// Email:
	Email string `json:"email" mapstructure:"email"`
	// Id:
	Id string `json:"id" mapstructure:"id"`
	// Name:
	Name string `json:"name" mapstructure:"name"`
}

// NewUserEntity instantiates a new UserEntity with default values overriding them as follows:
// 1. Default values specified in the UserEntity schema
// 2. Default values specified per UserEntity property
func NewUserEntity() *UserEntity {
	m := &UserEntity{}

	return m
}

// UnmarshalJSON implements the json.Unmarshaler interface for UserEntity. It set the default values for the UserEntity type
func (m *UserEntity) UnmarshalJSON(data []byte) error {
	// Set default values
	*m = *NewUserEntity()

	// Unmarshal using an alias to avoid an infinite loop
	type alias UserEntity
	err := json.Unmarshal(data, (*alias)(m))
	if err != nil {
		return err
	}
	return nil
}

// Validate implements basic validation for this model
func (m UserEntity) Validate() error {
	errors := validation.Errors{
		"email": validation.Validate(
			m.Email, validation.Required, is.EmailFormat,
		),
		"id": validation.Validate(
			m.Id, validation.Required, is.UUID,
		),
	}
	return errors.Filter()
}

// GetEmail returns the Email property
func (m UserEntity) GetEmail() string {
	return m.Email
}

// SetEmail sets the Email property
func (m *UserEntity) SetEmail(val string) {
	m.Email = val
}

// GetId returns the Id property
func (m UserEntity) GetId() string {
	return m.Id
}

// SetId sets the Id property
func (m *UserEntity) SetId(val string) {
	m.Id = val
}

// GetName returns the Name property
func (m UserEntity) GetName() string {
	return m.Name
}

// SetName sets the Name property
func (m *UserEntity) SetName(val string) {
	m.Name = val
}
