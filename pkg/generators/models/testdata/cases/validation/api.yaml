openapi: 3.0.0
info:
  version: 0.1.0
  title: Test

components:
  schemas:
    Person:
      type: object
      required:
        - name
        - gender
        - favoriteColors
        - cron
      properties:
        cron:
          $ref: "#/components/schemas/Cron"
        pomodoro:
          type: string
          pattern: "^\\d{1,2}m$"
        name:
          type: string
          minLength: 2
          maxLength: 32
        age:
          type: number
          minimum: 18
          maximum: 120
        children:
          type: integer
          minimum: 0
        gender:
          $ref: "#/components/schemas/Gender"
        secondGender:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/Gender"
        address:
          $ref: "#/components/schemas/Address"
        favoriteColors:
          type: array
          items:
            $ref: "#/components/schemas/Color"
          minItems: 1
        email:
          type: string
          format: "email"
        date:
          type: string
          format: "date"
        datetime:
          type: string
          format: "date-time"
        base64:
          type: string
          format: "byte"
        uuid:
          type: string
          format: "uuid"
        url:
          type: string
          format: "url"
        uri:
          type: string
          format: "uri"
        requestURI:
          type: string
          format: "request-uri"
        hostname:
          type: string
          format: "hostname"
        ipv4:
          type: string
          format: "ipv4"
        ipv6:
          type: string
          format: "ipv6"
        ip:
          type: string
          format: "ip"
    Cron:
      type: string
      pattern: (@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\d+(ns|us|Âµs|ms|s|m|h))+)|((((\d+,)+\d+|(\d+(\/|-)\d+)|\d+|\*) ?){5,7})
      x-pattern-error: "must be a valid cron value"
    Gender:
      type: string
      enum:
        - default
        - female
        - male
    Color:
      type: string
      enum:
        - red
        - blue
        - green
        - yellow
    Address:
      type: object
      required:
        - street
        - number
        - name
      properties:
        street:
          type: string
          minLength: 2
        number:
          type: integer
        subNumber:
          type: integer
          nullable: true
          minimum: 1
        name:
          type: string
          nullable: true
          minLength: 2
