// Code generated by openapi-generator-go DO NOT EDIT.
//
// Source:
//
//	Title: Test
//	Version: 0.1.0
package generatortest

import (
	"encoding/json"

	validation "github.com/go-ozzo/ozzo-validation/v4"
)

// ObjectWithAdditionalObjectsAdditionalProperties is an object.
type ObjectWithAdditionalObjectsAdditionalProperties struct {
	// Field1:
	Field1 string `json:"field1,omitempty" mapstructure:"field1,omitempty"`
	// Field2:
	Field2 int32 `json:"field2,omitempty" mapstructure:"field2,omitempty"`
}

// NewObjectWithAdditionalObjectsAdditionalProperties instantiates a new ObjectWithAdditionalObjectsAdditionalProperties with default values overriding them as follows:
// 1. Default values specified in the ObjectWithAdditionalObjectsAdditionalProperties schema
// 2. Default values specified per ObjectWithAdditionalObjectsAdditionalProperties property
func NewObjectWithAdditionalObjectsAdditionalProperties() *ObjectWithAdditionalObjectsAdditionalProperties {
	m := &ObjectWithAdditionalObjectsAdditionalProperties{}

	return m
}

// UnmarshalJSON implements the json.Unmarshaler interface for ObjectWithAdditionalObjectsAdditionalProperties. It set the default values for the ObjectWithAdditionalObjectsAdditionalProperties type
func (m *ObjectWithAdditionalObjectsAdditionalProperties) UnmarshalJSON(data []byte) error {
	// Set default values
	*m = *NewObjectWithAdditionalObjectsAdditionalProperties()

	// Unmarshal using an alias to avoid an infinite loop
	type alias ObjectWithAdditionalObjectsAdditionalProperties
	err := json.Unmarshal(data, (*alias)(m))
	if err != nil {
		return err
	}
	return nil
}

// Validate implements basic validation for this model
func (m ObjectWithAdditionalObjectsAdditionalProperties) Validate() error {
	errors := validation.Errors{
		"field1": validation.Validate(
			m.Field1, validation.Length(2, 0),
		),
		"field2": validation.Validate(
			m.Field2, validation.Min(int32(1)),
		),
	}
	return errors.Filter()
}

// GetField1 returns the Field1 property
func (m ObjectWithAdditionalObjectsAdditionalProperties) GetField1() string {
	return m.Field1
}

// SetField1 sets the Field1 property
func (m *ObjectWithAdditionalObjectsAdditionalProperties) SetField1(val string) {
	m.Field1 = val
}

// GetField2 returns the Field2 property
func (m ObjectWithAdditionalObjectsAdditionalProperties) GetField2() int32 {
	return m.Field2
}

// SetField2 sets the Field2 property
func (m *ObjectWithAdditionalObjectsAdditionalProperties) SetField2(val int32) {
	m.Field2 = val
}
