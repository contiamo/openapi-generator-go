// Code generated by openapi-generator-go DO NOT EDIT.
//
// Source:
//
//	Title: Test
//	Version: 0.1.0
package generatortest

import (
	"encoding/json"
	"fmt"

	validation "github.com/go-ozzo/ozzo-validation/v4"
)

// MapWithInLineObjectAdditionalProperties is an object.
type MapWithInLineObjectAdditionalProperties struct {
	// Field1:
	Field1 string `json:"field1,omitempty" mapstructure:"field1,omitempty"`
}

// NewMapWithInLineObjectAdditionalProperties instantiates a new MapWithInLineObjectAdditionalProperties with default values overriding them as follows:
// 1. Default values specified in the MapWithInLineObjectAdditionalProperties schema
// 2. Default values specified per MapWithInLineObjectAdditionalProperties property
func NewMapWithInLineObjectAdditionalProperties() *MapWithInLineObjectAdditionalProperties {
	m := &MapWithInLineObjectAdditionalProperties{}

	type alias MapWithInLineObjectAdditionalProperties
	err := json.Unmarshal([]byte(`{"field1":"value"}`), (*alias)(m))
	if err != nil {
		panic(fmt.Errorf("could not unmarshal default values for MapWithInLineObjectAdditionalProperties: %w", err))
	}

	return m
}

// UnmarshalJSON implements the json.Unmarshaler interface for MapWithInLineObjectAdditionalProperties. It set the default values for the MapWithInLineObjectAdditionalProperties type
func (m *MapWithInLineObjectAdditionalProperties) UnmarshalJSON(data []byte) error {
	// Set default values
	*m = *NewMapWithInLineObjectAdditionalProperties()

	// Unmarshal using an alias to avoid an infinite loop
	type alias MapWithInLineObjectAdditionalProperties
	err := json.Unmarshal(data, (*alias)(m))
	if err != nil {
		return err
	}
	return nil
}

// Validate implements basic validation for this model
func (m MapWithInLineObjectAdditionalProperties) Validate() error {
	errors := validation.Errors{
		"field1": validation.Validate(
			m.Field1, validation.Length(2, 0),
		),
	}
	return errors.Filter()
}

// GetField1 returns the Field1 property
func (m MapWithInLineObjectAdditionalProperties) GetField1() string {
	return m.Field1
}

// SetField1 sets the Field1 property
func (m *MapWithInLineObjectAdditionalProperties) SetField1(val string) {
	m.Field1 = val
}
