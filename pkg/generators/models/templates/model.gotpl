// This file is auto-generated, DO NOT EDIT.
//
// Source:
//     Title: {{.SpecTitle}}
//     Version: {{.SpecVersion}}
package {{ .PackageName }}

import (
	validation "github.com/go-ozzo/ozzo-validation/v4"
{{- range .Imports}}
	"{{.}}"
{{ end}}
)

{{ (printf "%s is an object. %s" .Name .Description) | commentBlock }}
{{- if not .Properties }}
type {{.Name}} {{ .GoType }}
{{- else }}
type {{.Name}} struct {
{{- range .Properties}}
	{{ (printf "%s: %s" .Name .Description) | commentBlock }}
	{{.Name}} {{.GoType}} {{.JSONTags}}
{{- end}}
}
{{- end}}

{{- $modelName := .Name }}
// Validate implements basic validation for this model
func (m {{$modelName}}) Validate() error {
	return validation.Errors{
		{{- range .Properties}}
			{{- if .NeedsValidation }}
				"{{ firstLower .Name }}": validation.Validate(
					m.{{ .Name }},
					{{- if and .IsRequiredInValidation}}
						{{- if or .IsEnum .Min .MinLength .HasFormat}}validation.Required,{{ else }}validation.NotNil,{{- end }}
					{{- end }}
					{{- if .HasMin }}validation.Min({{ .GoType }}({{ .Min }})),{{ end }}
					{{- if .HasMax }}validation.Max({{ .GoType }}({{ .Max }})),{{ end }}
					{{- if or .HasMinLength .HasMaxLength }}validation.Length({{ .MinLength }},{{ .MaxLength }}),{{ end }}
					{{- if .IsDate }}validation.Date("2006-01-02"),{{ end }}
					{{- if .IsDateTime }}validation.Date(time.RFC3339),{{ end }}
					{{- if .IsBase64 }}is.Base64,{{ end }}
					{{- if .IsEmail }}is.EmailFormat,{{ end }}
					{{- if .IsUUID }}is.UUID,{{ end }}
					{{- if .IsURL }}is.URL.Error("must be a valid URL with HTTP or HTTPS scheme"),{{ end }}
					{{- if .IsURI }}is.RequestURI,{{ end }}
					{{- if .IsRequestURI }}is.RequestURL.Error("must be valid URI with scheme"),{{ end }}
					{{- if .IsHostname }}is.Host,{{ end }}
					{{- if .IsIPv4 }}is.IPv4,{{ end }}
					{{- if .IsIPv6 }}is.IPv6,{{ end }}
					{{- if .IsIP }}is.IP,{{ end }}
					{{- if .Pattern }}validation.Match(regexp.MustCompile(`{{ .Pattern }}`)),{{ end }}
				),
			{{- end }}
		{{- end }}
	}.Filter()
}
{{ range .Properties}}
// Get{{.Name}} returns the {{.Name}} property
func (m {{$modelName}}) Get{{.Name}}() {{.GoType}} {
	return m.{{.Name}}
}

// Set{{.Name}} sets the {{.Name}} property
func (m *{{$modelName}}) Set{{.Name}}(val {{.GoType}}) {
	m.{{.Name}} = val
}
{{ end}}
